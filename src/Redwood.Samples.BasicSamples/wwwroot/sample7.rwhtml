@viewModel Redwood.Samples.BasicSamples.ViewModels.Sample7ViewModel, Redwood.Samples.BasicSamples

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Hello from Redwood!</title>
	<style>
		.calendar tr {
			height: 40px;
		}
		.calendar td {
			width: 40px;
			text-align: center;
			vertical-align: middle;
		}
		.calendar th {
			text-align: center;
		}
		.calendar td a {
			color: black;
		}
		.calendar td.selected {
			background-color: #a0b0ff;
		}
		.calendar td.today {
			background-color: #eee8ff;
		}
		.calendar td.other a {
			color: gray;
		}
	</style>
</head>
<body>
	<div class="container">
		<h1>Client Side Calendar</h1>
		
		<div class="row">
			<div class="col-md-3">
				<sample7:Calendar />
			</div>
			<div class="col-md-3">
				<sample7:Calendar SelectedDate="{value: SelectedDate}" />
			</div>
			<div class="col-md-3">
				<sample7:Calendar ID="customId" />
			</div>
		</div>
	</div>

	<p><rw:Literal Text="{value: SelectedDate}" /></p>

	<p>
		Disclaimer: The Calendar control generates the table contents on the server side and passes them to the client in the control state (so you don't have to keep it in the viewmodel).
		This is only for a demo purposes of how the control state bindings work. In real world you would generate the table contents in javascript on the client side and the control
		would only remember the VisibleDate (and maybe the SelectedDate) in the control state!
	</p>

	<rw:RequiredResource Name="bootstrap" />
</body>
</html>
